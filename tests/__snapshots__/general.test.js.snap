// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`browser config should be correct 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": null,
  "parserOptions": Object {
    "ecmaVersion": 2019,
    "sourceType": "module",
  },
  "plugins": Array [],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "accessor-pairs": Array [
      "error",
      Object {
        "enforceForClassMembers": true,
        "getWithoutSet": false,
        "setWithoutGet": true,
      },
    ],
    "array-bracket-newline": Array [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": Array [
      "error",
      "never",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": false,
        "checkForEach": false,
      },
    ],
    "array-element-newline": Array [
      "error",
      "consistent",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
      Object {
        "requireForBlockBody": false,
      },
    ],
    "arrow-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "error",
      "always",
    ],
    "brace-style": Array [
      "error",
      "1tbs",
      Object {
        "allowSingleLine": false,
      },
    ],
    "camelcase": Array [
      "error",
      Object {
        "allow": Array [],
        "ignoreDestructuring": true,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "always",
      },
    ],
    "capitalized-comments": Array [
      "error",
      "always",
      Object {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true,
      },
    ],
    "class-methods-use-this": Array [
      "error",
    ],
    "comma-dangle": Array [
      "error",
      "always-multiline",
    ],
    "comma-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": Array [
      "error",
      "last",
    ],
    "complexity": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "error",
      "never",
      Object {
        "enforceForClassMembers": true,
      },
    ],
    "consistent-return": Array [
      "error",
      Object {
        "treatUndefinedAsUnspecified": false,
      },
    ],
    "consistent-this": Array [
      "error",
      "self",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
    ],
    "default-case-last": Array [
      "error",
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "error",
      "always",
    ],
    "eqeqeq": Array [
      "error",
      "always",
      Object {
        "null": "ignore",
      },
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "error",
      "never",
    ],
    "func-name-matching": Array [
      "error",
      "always",
      Object {
        "considerPropertyDescriptor": true,
        "includeCommonJSModuleExports": true,
      },
    ],
    "func-names": Array [
      "error",
      "never",
      Object {
        "generators": "never",
      },
    ],
    "func-style": Array [
      "error",
      "expression",
      Object {
        "allowArrowFunctions": true,
      },
    ],
    "function-call-argument-newline": Array [
      "error",
      "consistent",
    ],
    "function-paren-newline": Array [
      "error",
      "consistent",
    ],
    "generator-star-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": false,
      },
    ],
    "grouped-accessor-pairs": Array [
      "error",
      "getBeforeSet",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "id-denylist": Array [
      "off",
    ],
    "id-length": Array [
      "off",
    ],
    "id-match": Array [
      "off",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "indent": Array [
      "error",
      2,
    ],
    "init-declarations": Array [
      "off",
    ],
    "jsx-quotes": Array [
      "error",
      "prefer-double",
    ],
    "key-spacing": Array [
      "error",
      Object {
        "afterColon": true,
        "beforeColon": false,
        "mode": "strict",
      },
    ],
    "keyword-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "line-comment-position": Array [
      "off",
    ],
    "linebreak-style": Array [
      "error",
      "unix",
    ],
    "lines-around-comment": Array [
      "error",
      Object {
        "afterBlockComment": false,
        "afterLineComment": false,
        "allowArrayEnd": false,
        "allowArrayStart": true,
        "allowBlockEnd": false,
        "allowBlockStart": true,
        "allowClassEnd": false,
        "allowClassStart": true,
        "allowObjectEnd": false,
        "allowObjectStart": true,
        "beforeBlockComment": true,
        "beforeLineComment": true,
      },
    ],
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": false,
      },
    ],
    "max-classes-per-file": Array [
      "off",
    ],
    "max-depth": Array [
      "error",
      4,
    ],
    "max-len": Array [
      "error",
      Object {
        "code": 120,
        "ignoreComments": false,
        "ignoreRegExpLiterals": false,
        "ignoreStrings": false,
        "ignoreTemplateLiterals": false,
        "ignoreTrailingComments": false,
        "ignoreUrls": false,
        "tabWidth": 2,
      },
    ],
    "max-lines": Array [
      "error",
      Object {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-lines-per-function": Array [
      "off",
    ],
    "max-nested-callbacks": Array [
      "error",
      Object {
        "max": 3,
      },
    ],
    "max-params": Array [
      "error",
      Object {
        "max": 4,
      },
    ],
    "max-statements": Array [
      "off",
    ],
    "max-statements-per-line": Array [
      "error",
      Object {
        "max": 2,
      },
    ],
    "multiline-comment-style": Array [
      "error",
      "starred-block",
    ],
    "multiline-ternary": Array [
      "error",
      "always-multiline",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": true,
        "newIsCap": true,
        "properties": true,
      },
    ],
    "new-parens": Array [
      "error",
    ],
    "newline-per-chained-call": Array [
      "error",
      Object {
        "ignoreChainWithDepth": 4,
      },
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "error",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "off",
    ],
    "no-bitwise": Array [
      "off",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      "error",
      Object {
        "allowParens": true,
      },
    ],
    "no-console": Array [
      "error",
      Object {},
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "error",
      Object {
        "checkLoops": false,
      },
    ],
    "no-continue": Array [
      "off",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
      Object {
        "includeExports": false,
      },
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
      Object {
        "allowEmptyCatch": true,
      },
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "functions",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "off",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "error",
      "all",
    ],
    "no-extra-semi": Array [
      "error",
    ],
    "no-fallthrough": Array [
      "off",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
      Object {
        "exceptions": Array [],
      },
    ],
    "no-implicit-coercion": Array [
      "error",
      Object {
        "allow": Array [
          "!!",
        ],
        "boolean": true,
        "number": true,
        "string": true,
      },
    ],
    "no-implicit-globals": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inline-comments": Array [
      "off",
    ],
    "no-inner-declarations": Array [
      "error",
      "functions",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-invalid-this": Array [
      "error",
      Object {
        "capIsConstructor": true,
      },
    ],
    "no-irregular-whitespace": Array [
      "error",
      Object {
        "skipComments": false,
        "skipRegExps": false,
        "skipStrings": false,
        "skipTemplates": false,
      },
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "error",
    ],
    "no-magic-numbers": Array [
      "error",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
      },
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      "error",
      Object {
        "allowSamePrecedence": true,
      },
    ],
    "no-mixed-spaces-and-tabs": Array [
      "error",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "error",
      Object {
        "ignoreEOLComments": false,
      },
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "error",
    ],
    "no-negated-condition": Array [
      "error",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": true,
      },
    ],
    "no-plusplus": Array [
      "off",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "error",
      Object {
        "builtinGlobals": true,
      },
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-restricted-exports": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "off",
    ],
    "no-restricted-imports": Array [
      "off",
    ],
    "no-restricted-properties": Array [
      "off",
    ],
    "no-restricted-syntax": Array [
      "off",
    ],
    "no-return-assign": Array [
      "error",
      "always",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "off",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      "error",
      Object {
        "allowIndentationTabs": false,
      },
    ],
    "no-template-curly-in-string": Array [
      "off",
    ],
    "no-ternary": Array [
      "off",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "error",
      Object {
        "ignoreComments": false,
        "skipBlankLines": false,
      },
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "off",
    ],
    "no-unexpected-multiline": Array [
      "error",
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unneeded-ternary": Array [
      "error",
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unreachable-loop": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "error",
      Object {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
      },
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": false,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "functions": false,
        "variables": true,
      },
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-warning-comments": Array [
      "error",
      Object {
        "location": "start",
        "terms": Array [
          "todo",
          "fixme",
          "xxx",
        ],
      },
    ],
    "no-whitespace-before-property": Array [
      "error",
    ],
    "no-with": Array [
      "error",
    ],
    "nonblock-statement-body-position": Array [
      "error",
      "beside",
    ],
    "object-curly-newline": Array [
      "error",
      Object {
        "consistent": true,
      },
    ],
    "object-curly-spacing": Array [
      "error",
      "always",
    ],
    "object-property-newline": Array [
      "error",
      Object {
        "allowAllPropertiesOnSameLine": true,
        "allowMultiplePropertiesPerLine": false,
      },
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidExplicitReturnArrows": false,
        "avoidQuotes": false,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "error",
      "always",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "error",
      "after",
      Object {
        "overrides": Object {
          ":": "before",
          "?": "before",
        },
      },
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
      Object {
        "blankLine": "always",
        "next": "block-like",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": "block-like",
      },
    ],
    "prefer-arrow-callback": Array [
      "error",
      Object {
        "allowNamedFunctions": true,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false,
      },
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "AssignmentExpression": Object {
          "array": true,
          "object": true,
        },
        "VariableDeclarator": Object {
          "array": false,
          "object": true,
        },
      },
      Object {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": Array [
      "error",
    ],
    "prefer-named-capture-group": Array [
      "off",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-object-spread": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
      Object {
        "disallowRedundantWrapping": true,
      },
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "quote-props": Array [
      "error",
      "consistent-as-needed",
    ],
    "quotes": Array [
      "error",
      "single",
      Object {
        "allowTemplateLiterals": false,
        "avoidEscape": false,
      },
    ],
    "radix": Array [
      "error",
      "always",
    ],
    "require-atomic-updates": Array [
      "off",
    ],
    "require-await": Array [
      "error",
    ],
    "require-unicode-regexp": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
      "never",
    ],
    "semi": Array [
      "error",
      "never",
      Object {
        "beforeStatementContinuationChars": "always",
      },
    ],
    "semi-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": Array [
      "error",
      "last",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": Array [
          "none",
          "all",
          "multiple",
          "single",
        ],
      },
    ],
    "sort-keys": Array [
      "off",
    ],
    "sort-vars": Array [
      "error",
      Object {
        "ignoreCase": false,
      },
    ],
    "space-before-blocks": Array [
      "error",
      "always",
    ],
    "space-before-function-paren": Array [
      "error",
      Object {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": Array [
      "error",
      "never",
    ],
    "space-infix-ops": Array [
      "error",
      Object {
        "int32Hint": false,
      },
    ],
    "space-unary-ops": Array [
      "error",
      Object {
        "nonwords": false,
        "words": true,
      },
    ],
    "spaced-comment": Array [
      "error",
      "always",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
      "never",
    ],
    "template-tag-spacing": Array [
      "error",
      "never",
    ],
    "unicode-bom": Array [
      "error",
      "never",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "error",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
      "inside",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
      "after",
    ],
    "yoda": Array [
      "error",
      "never",
    ],
  },
  "settings": Object {},
}
`;

exports[`node config should be correct 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": null,
  "parserOptions": Object {
    "ecmaVersion": 2019,
    "sourceType": "module",
  },
  "plugins": Array [
    "node",
    "security",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "accessor-pairs": Array [
      "error",
      Object {
        "enforceForClassMembers": true,
        "getWithoutSet": false,
        "setWithoutGet": true,
      },
    ],
    "array-bracket-newline": Array [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": Array [
      "error",
      "never",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": false,
        "checkForEach": false,
      },
    ],
    "array-element-newline": Array [
      "error",
      "consistent",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
      Object {
        "requireForBlockBody": false,
      },
    ],
    "arrow-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "error",
      "always",
    ],
    "brace-style": Array [
      "error",
      "1tbs",
      Object {
        "allowSingleLine": false,
      },
    ],
    "camelcase": Array [
      "error",
      Object {
        "allow": Array [],
        "ignoreDestructuring": true,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "always",
      },
    ],
    "capitalized-comments": Array [
      "error",
      "always",
      Object {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true,
      },
    ],
    "class-methods-use-this": Array [
      "error",
    ],
    "comma-dangle": Array [
      "error",
      "always-multiline",
    ],
    "comma-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": Array [
      "error",
      "last",
    ],
    "complexity": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "error",
      "never",
      Object {
        "enforceForClassMembers": true,
      },
    ],
    "consistent-return": Array [
      "error",
      Object {
        "treatUndefinedAsUnspecified": false,
      },
    ],
    "consistent-this": Array [
      "error",
      "self",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
    ],
    "default-case-last": Array [
      "error",
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "error",
      "always",
    ],
    "eqeqeq": Array [
      "error",
      "always",
      Object {
        "null": "ignore",
      },
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "error",
      "never",
    ],
    "func-name-matching": Array [
      "error",
      "always",
      Object {
        "considerPropertyDescriptor": true,
        "includeCommonJSModuleExports": true,
      },
    ],
    "func-names": Array [
      "error",
      "never",
      Object {
        "generators": "never",
      },
    ],
    "func-style": Array [
      "error",
      "expression",
      Object {
        "allowArrowFunctions": true,
      },
    ],
    "function-call-argument-newline": Array [
      "error",
      "consistent",
    ],
    "function-paren-newline": Array [
      "error",
      "consistent",
    ],
    "generator-star-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": false,
      },
    ],
    "grouped-accessor-pairs": Array [
      "error",
      "getBeforeSet",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "id-denylist": Array [
      "off",
    ],
    "id-length": Array [
      "off",
    ],
    "id-match": Array [
      "off",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "indent": Array [
      "error",
      2,
    ],
    "init-declarations": Array [
      "off",
    ],
    "jsx-quotes": Array [
      "error",
      "prefer-double",
    ],
    "key-spacing": Array [
      "error",
      Object {
        "afterColon": true,
        "beforeColon": false,
        "mode": "strict",
      },
    ],
    "keyword-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "line-comment-position": Array [
      "off",
    ],
    "linebreak-style": Array [
      "error",
      "unix",
    ],
    "lines-around-comment": Array [
      "error",
      Object {
        "afterBlockComment": false,
        "afterLineComment": false,
        "allowArrayEnd": false,
        "allowArrayStart": true,
        "allowBlockEnd": false,
        "allowBlockStart": true,
        "allowClassEnd": false,
        "allowClassStart": true,
        "allowObjectEnd": false,
        "allowObjectStart": true,
        "beforeBlockComment": true,
        "beforeLineComment": true,
      },
    ],
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": false,
      },
    ],
    "max-classes-per-file": Array [
      "off",
    ],
    "max-depth": Array [
      "error",
      4,
    ],
    "max-len": Array [
      "error",
      Object {
        "code": 120,
        "ignoreComments": false,
        "ignoreRegExpLiterals": false,
        "ignoreStrings": false,
        "ignoreTemplateLiterals": false,
        "ignoreTrailingComments": false,
        "ignoreUrls": false,
        "tabWidth": 2,
      },
    ],
    "max-lines": Array [
      "error",
      Object {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-lines-per-function": Array [
      "off",
    ],
    "max-nested-callbacks": Array [
      "error",
      Object {
        "max": 3,
      },
    ],
    "max-params": Array [
      "error",
      Object {
        "max": 4,
      },
    ],
    "max-statements": Array [
      "off",
    ],
    "max-statements-per-line": Array [
      "error",
      Object {
        "max": 2,
      },
    ],
    "multiline-comment-style": Array [
      "error",
      "starred-block",
    ],
    "multiline-ternary": Array [
      "error",
      "always-multiline",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": true,
        "newIsCap": true,
        "properties": true,
      },
    ],
    "new-parens": Array [
      "error",
    ],
    "newline-per-chained-call": Array [
      "error",
      Object {
        "ignoreChainWithDepth": 4,
      },
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "error",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "off",
    ],
    "no-bitwise": Array [
      "off",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      "error",
      Object {
        "allowParens": true,
      },
    ],
    "no-console": Array [
      "error",
      Object {},
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "error",
      Object {
        "checkLoops": false,
      },
    ],
    "no-continue": Array [
      "off",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
      Object {
        "includeExports": false,
      },
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
      Object {
        "allowEmptyCatch": true,
      },
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "functions",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "off",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "error",
      "all",
    ],
    "no-extra-semi": Array [
      "error",
    ],
    "no-fallthrough": Array [
      "off",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
      Object {
        "exceptions": Array [],
      },
    ],
    "no-implicit-coercion": Array [
      "error",
      Object {
        "allow": Array [
          "!!",
        ],
        "boolean": true,
        "number": true,
        "string": true,
      },
    ],
    "no-implicit-globals": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inline-comments": Array [
      "off",
    ],
    "no-inner-declarations": Array [
      "error",
      "functions",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-invalid-this": Array [
      "error",
      Object {
        "capIsConstructor": true,
      },
    ],
    "no-irregular-whitespace": Array [
      "error",
      Object {
        "skipComments": false,
        "skipRegExps": false,
        "skipStrings": false,
        "skipTemplates": false,
      },
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "error",
    ],
    "no-magic-numbers": Array [
      "error",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
      },
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      "error",
      Object {
        "allowSamePrecedence": true,
      },
    ],
    "no-mixed-spaces-and-tabs": Array [
      "error",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "error",
      Object {
        "ignoreEOLComments": false,
      },
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "error",
    ],
    "no-negated-condition": Array [
      "error",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": true,
      },
    ],
    "no-plusplus": Array [
      "off",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "error",
      Object {
        "builtinGlobals": true,
      },
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-restricted-exports": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "off",
    ],
    "no-restricted-imports": Array [
      "off",
    ],
    "no-restricted-properties": Array [
      "off",
    ],
    "no-restricted-syntax": Array [
      "off",
    ],
    "no-return-assign": Array [
      "error",
      "always",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "off",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      "error",
      Object {
        "allowIndentationTabs": false,
      },
    ],
    "no-template-curly-in-string": Array [
      "off",
    ],
    "no-ternary": Array [
      "off",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "error",
      Object {
        "ignoreComments": false,
        "skipBlankLines": false,
      },
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "off",
    ],
    "no-unexpected-multiline": Array [
      "error",
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unneeded-ternary": Array [
      "error",
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unreachable-loop": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "error",
      Object {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
      },
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": false,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "functions": false,
        "variables": true,
      },
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-warning-comments": Array [
      "error",
      Object {
        "location": "start",
        "terms": Array [
          "todo",
          "fixme",
          "xxx",
        ],
      },
    ],
    "no-whitespace-before-property": Array [
      "error",
    ],
    "no-with": Array [
      "error",
    ],
    "node/callback-return": Array [
      "off",
    ],
    "node/exports-style": Array [
      "error",
      "module.exports",
      Object {
        "allowBatchAssign": false,
      },
    ],
    "node/file-extension-in-import": Array [
      "off",
    ],
    "node/global-require": Array [
      "off",
    ],
    "node/handle-callback-err": Array [
      "error",
      "err",
    ],
    "node/no-callback-literal": Array [
      "error",
    ],
    "node/no-deprecated-api": Array [
      "error",
    ],
    "node/no-exports-assign": Array [
      "error",
    ],
    "node/no-extraneous-import": Array [
      "error",
    ],
    "node/no-extraneous-require": Array [
      "error",
    ],
    "node/no-hide-core-modules": Array [
      "off",
    ],
    "node/no-missing-import": Array [
      "off",
    ],
    "node/no-missing-require": Array [
      "off",
    ],
    "node/no-mixed-requires": Array [
      "error",
      Object {
        "allowCall": false,
        "grouping": false,
      },
    ],
    "node/no-new-require": Array [
      "error",
    ],
    "node/no-path-concat": Array [
      "error",
    ],
    "node/no-process-env": Array [
      "off",
    ],
    "node/no-process-exit": Array [
      "error",
    ],
    "node/no-restricted-import": Array [
      "error",
    ],
    "node/no-restricted-require": Array [
      "error",
    ],
    "node/no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "node/no-unpublished-bin": Array [
      "error",
    ],
    "node/no-unpublished-import": Array [
      "error",
    ],
    "node/no-unpublished-require": Array [
      "error",
    ],
    "node/no-unsupported-features": Array [
      "off",
    ],
    "node/no-unsupported-features/es-builtins": Array [
      "error",
    ],
    "node/no-unsupported-features/es-syntax": Array [
      "error",
      Object {
        "ignores": Array [
          "modules",
        ],
      },
    ],
    "node/no-unsupported-features/node-builtins": Array [
      "error",
    ],
    "node/prefer-global/buffer": Array [
      "error",
      "always",
    ],
    "node/prefer-global/console": Array [
      "error",
      "always",
    ],
    "node/prefer-global/process": Array [
      "error",
      "always",
    ],
    "node/prefer-global/text-decoder": Array [
      "error",
      "never",
    ],
    "node/prefer-global/text-encoder": Array [
      "error",
      "never",
    ],
    "node/prefer-global/url": Array [
      "error",
      "never",
    ],
    "node/prefer-global/url-search-params": Array [
      "error",
      "never",
    ],
    "node/prefer-promises/dns": Array [
      "error",
    ],
    "node/prefer-promises/fs": Array [
      "error",
    ],
    "node/process-exit-as-throw": Array [
      "error",
    ],
    "node/shebang": Array [
      "error",
    ],
    "nonblock-statement-body-position": Array [
      "error",
      "beside",
    ],
    "object-curly-newline": Array [
      "error",
      Object {
        "consistent": true,
      },
    ],
    "object-curly-spacing": Array [
      "error",
      "always",
    ],
    "object-property-newline": Array [
      "error",
      Object {
        "allowAllPropertiesOnSameLine": true,
        "allowMultiplePropertiesPerLine": false,
      },
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidExplicitReturnArrows": false,
        "avoidQuotes": false,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "error",
      "always",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "error",
      "after",
      Object {
        "overrides": Object {
          ":": "before",
          "?": "before",
        },
      },
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
      Object {
        "blankLine": "always",
        "next": "block-like",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": "block-like",
      },
    ],
    "prefer-arrow-callback": Array [
      "error",
      Object {
        "allowNamedFunctions": true,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false,
      },
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "AssignmentExpression": Object {
          "array": true,
          "object": true,
        },
        "VariableDeclarator": Object {
          "array": false,
          "object": true,
        },
      },
      Object {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": Array [
      "error",
    ],
    "prefer-named-capture-group": Array [
      "off",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-object-spread": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
      Object {
        "disallowRedundantWrapping": true,
      },
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "quote-props": Array [
      "error",
      "consistent-as-needed",
    ],
    "quotes": Array [
      "error",
      "single",
      Object {
        "allowTemplateLiterals": false,
        "avoidEscape": false,
      },
    ],
    "radix": Array [
      "error",
      "always",
    ],
    "require-atomic-updates": Array [
      "off",
    ],
    "require-await": Array [
      "error",
    ],
    "require-unicode-regexp": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
      "never",
    ],
    "security/detect-buffer-noassert": Array [
      "error",
    ],
    "security/detect-child-process": Array [
      "error",
    ],
    "security/detect-disable-mustache-escape": Array [
      "error",
    ],
    "security/detect-eval-with-expression": Array [
      "error",
    ],
    "security/detect-new-buffer": Array [
      "error",
    ],
    "security/detect-no-csrf-before-method-override": Array [
      "error",
    ],
    "security/detect-non-literal-fs-filename": Array [
      "error",
    ],
    "security/detect-non-literal-regexp": Array [
      "error",
    ],
    "security/detect-non-literal-require": Array [
      "error",
    ],
    "security/detect-object-injection": Array [
      "off",
    ],
    "security/detect-possible-timing-attacks": Array [
      "error",
    ],
    "security/detect-pseudoRandomBytes": Array [
      "error",
    ],
    "security/detect-unsafe-regex": Array [
      "error",
    ],
    "semi": Array [
      "error",
      "never",
      Object {
        "beforeStatementContinuationChars": "always",
      },
    ],
    "semi-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": Array [
      "error",
      "last",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": Array [
          "none",
          "all",
          "multiple",
          "single",
        ],
      },
    ],
    "sort-keys": Array [
      "off",
    ],
    "sort-vars": Array [
      "error",
      Object {
        "ignoreCase": false,
      },
    ],
    "space-before-blocks": Array [
      "error",
      "always",
    ],
    "space-before-function-paren": Array [
      "error",
      Object {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": Array [
      "error",
      "never",
    ],
    "space-infix-ops": Array [
      "error",
      Object {
        "int32Hint": false,
      },
    ],
    "space-unary-ops": Array [
      "error",
      Object {
        "nonwords": false,
        "words": true,
      },
    ],
    "spaced-comment": Array [
      "error",
      "always",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
      "never",
    ],
    "template-tag-spacing": Array [
      "error",
      "never",
    ],
    "unicode-bom": Array [
      "error",
      "never",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "error",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
      "inside",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
      "after",
    ],
    "yoda": Array [
      "error",
      "never",
    ],
  },
  "settings": Object {},
}
`;

exports[`node+ts config should be correct 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": "/home/lxndr/devel/projects/eslint-config/node_modules/@typescript-eslint/parser/dist/index.js",
  "parserOptions": Object {
    "ecmaVersion": 2019,
    "sourceType": "module",
    "useJSXTextNode": true,
  },
  "plugins": Array [
    "node",
    "security",
    "@typescript-eslint",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array",
        "readonly": "array",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "error",
      Object {
        "minimumDescriptionLength": 3,
        "ts-check": true,
        "ts-expect-error": true,
        "ts-ignore": true,
        "ts-nocheck": true,
      },
    ],
    "@typescript-eslint/ban-tslint-comment": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "error",
      "1tbs",
      Object {
        "allowSingleLine": false,
      },
    ],
    "@typescript-eslint/camelcase": Array [
      "off",
    ],
    "@typescript-eslint/class-literal-property-style": Array [
      "error",
      "fields",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
      Object {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "never",
      },
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
      "interface",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
        "allowPrivateClassPropertyAccess": false,
      },
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/explicit-member-accessibility": Array [
      "error",
      Object {
        "accessibility": "no-public",
      },
    ],
    "@typescript-eslint/explicit-module-boundary-types": Array [
      "error",
      Object {
        "allowArgumentsExplicitlyTypedAsAny": false,
        "allowDirectConstAssertionInArrowFunctions": false,
        "allowHigherOrderFunctions": true,
        "allowTypedFunctionExpressions": true,
        "allowedNames": Array [],
      },
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "error",
      "never",
    ],
    "@typescript-eslint/indent": Array [
      "error",
      2,
    ],
    "@typescript-eslint/init-declarations": Array [
      "off",
    ],
    "@typescript-eslint/keyword-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "@typescript-eslint/lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterOverload": true,
        "exceptAfterSingleLine": false,
      },
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "error",
      Object {
        "multiline": Object {
          "delimiter": "none",
          "requireLast": true,
        },
        "singleline": Object {
          "delimiter": "semi",
          "requireLast": false,
        },
      },
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/method-signature-style": Array [
      "off",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
      Object {
        "format": Array [
          "camelCase",
        ],
        "leadingUnderscore": "forbid",
        "selector": "default",
        "trailingUnderscore": "forbid",
      },
      Object {
        "format": Array [
          "camelCase",
          "UPPER_CASE",
        ],
        "leadingUnderscore": "allow",
        "selector": "variable",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "leadingUnderscore": "allow",
        "selector": "property",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "leadingUnderscore": "require",
        "modifiers": Array [
          "private",
        ],
        "selector": "memberLike",
      },
      Object {
        "format": Array [
          "PascalCase",
        ],
        "selector": "typeLike",
      },
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-base-to-string": Array [
      "error",
    ],
    "@typescript-eslint/no-dupe-class-members": Array [
      "error",
    ],
    "@typescript-eslint/no-dynamic-delete": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
        ],
      },
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
      Object {
        "allowSingleExtends": true,
      },
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "error",
      "all",
      Object {
        "conditionalAssign": true,
        "enforceForArrowConditionals": false,
        "enforceForFunctionPrototypeMethods": true,
        "enforceForNewInMemberExpressions": true,
        "enforceForSequenceExpressions": true,
        "ignoreJSX": "all",
        "nestedBinaryExpressions": false,
        "returnAssign": false,
      },
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "error",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
      Object {
        "allowConstructorOnly": false,
        "allowEmpty": false,
        "allowStaticOnly": false,
        "allowWithDecorator": false,
      },
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
      Object {
        "ignoreIIFE": false,
        "ignoreVoid": true,
      },
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
      Object {
        "ignoreParameters": false,
        "ignoreProperties": false,
      },
    ],
    "@typescript-eslint/no-invalid-this": Array [
      "error",
      Object {
        "capIsConstructor": true,
      },
    ],
    "@typescript-eslint/no-invalid-void-type": Array [
      "error",
      Object {
        "allowInGenericTypeArguments": true,
      },
    ],
    "@typescript-eslint/no-loss-of-precision": Array [
      "error",
    ],
    "@typescript-eslint/no-magic-numbers": Array [
      "error",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
        "ignoreEnums": true,
        "ignoreNumericLiteralTypes": true,
        "ignoreReadonlyClassProperties": true,
      },
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
      Object {
        "checksConditionals": true,
        "checksVoidReturn": true,
      },
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
      Object {
        "allowDeclarations": false,
        "allowDefinitionFiles": false,
      },
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-parameter-properties": Array [
      "off",
    ],
    "@typescript-eslint/no-require-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
      Object {
        "allowDestructuring": false,
      },
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-type-alias": Array [
      "off",
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": Array [
      "error",
      Object {
        "allowComparingNullableBooleansToFalse": true,
        "allowComparingNullableBooleansToTrue": true,
      },
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
      Object {
        "allowConstantLoopConditions": true,
      },
    ],
    "@typescript-eslint/no-unnecessary-qualifier": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
      Object {
        "typesToIgnore": Array [],
      },
    ],
    "@typescript-eslint/no-unsafe-assignment": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
      Object {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
      },
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": false,
        "vars": "all",
      },
    ],
    "@typescript-eslint/no-unused-vars-experimental": Array [
      "error",
      Object {
        "ignoreArgsIfArgsAfterAreUsed": false,
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "enums": true,
        "functions": false,
        "typedefs": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-enum-initializers": Array [
      "off",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "off",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-includes": Array [
      "error",
    ],
    "@typescript-eslint/prefer-literal-enum-member": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/prefer-nullish-coalescing": Array [
      "off",
    ],
    "@typescript-eslint/prefer-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/prefer-readonly": Array [
      "error",
      Object {
        "onlyInlineLambdas": false,
      },
    ],
    "@typescript-eslint/prefer-readonly-parameter-types": Array [
      "off",
    ],
    "@typescript-eslint/prefer-reduce-type-parameter": Array [
      "error",
    ],
    "@typescript-eslint/prefer-regexp-exec": Array [
      "error",
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": Array [
      "error",
    ],
    "@typescript-eslint/prefer-ts-expect-error": Array [
      "error",
    ],
    "@typescript-eslint/promise-function-async": Array [
      "error",
      Object {
        "checkArrowFunctions": true,
        "checkFunctionDeclarations": true,
        "checkFunctionExpressions": true,
        "checkMethodDeclarations": true,
      },
    ],
    "@typescript-eslint/quotes": Array [
      "error",
      "single",
      Object {
        "allowTemplateLiterals": false,
        "avoidEscape": false,
      },
    ],
    "@typescript-eslint/require-array-sort-compare": Array [
      "error",
      Object {
        "ignoreStringArrays": true,
      },
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
      Object {
        "checkCompoundAssignments": true,
      },
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
      Object {
        "allowAny": false,
        "allowBoolean": false,
        "allowNullish": false,
        "allowNumber": true,
      },
    ],
    "@typescript-eslint/return-await": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/semi": Array [
      "error",
      "never",
      Object {
        "beforeStatementContinuationChars": "always",
      },
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "error",
      Object {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "@typescript-eslint/strict-boolean-expressions": Array [
      "error",
      Object {
        "allowAny": false,
        "allowNullableBoolean": false,
        "allowNullableNumber": false,
        "allowNullableObject": true,
        "allowNullableString": false,
        "allowNumber": true,
        "allowString": true,
      },
    ],
    "@typescript-eslint/switch-exhaustiveness-check": Array [
      "error",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
      Object {
        "lib": "never",
        "path": "never",
        "types": "never",
      },
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
        "overrides": Object {
          "arrow": Object {
            "after": true,
            "before": true,
          },
        },
      },
    ],
    "@typescript-eslint/typedef": Array [
      "error",
      Object {
        "arrayDestructuring": false,
        "arrowParameter": false,
        "memberVariableDeclaration": false,
        "objectDestructuring": false,
        "parameter": true,
        "propertyDeclaration": true,
        "variableDeclaration": false,
        "variableDeclarationIgnoreFunction": false,
      },
    ],
    "@typescript-eslint/unbound-method": Array [
      "error",
      Object {
        "ignoreStatic": false,
      },
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "accessor-pairs": Array [
      "error",
      Object {
        "enforceForClassMembers": true,
        "getWithoutSet": false,
        "setWithoutGet": true,
      },
    ],
    "array-bracket-newline": Array [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": Array [
      "error",
      "never",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": false,
        "checkForEach": false,
      },
    ],
    "array-element-newline": Array [
      "error",
      "consistent",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
      Object {
        "requireForBlockBody": false,
      },
    ],
    "arrow-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "error",
      "always",
    ],
    "brace-style": Array [
      "off",
      "1tbs",
      Object {
        "allowSingleLine": false,
      },
    ],
    "camelcase": Array [
      "off",
      Object {
        "allow": Array [],
        "ignoreDestructuring": true,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "always",
      },
    ],
    "capitalized-comments": Array [
      "error",
      "always",
      Object {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true,
      },
    ],
    "class-methods-use-this": Array [
      "error",
    ],
    "comma-dangle": Array [
      "error",
      "always-multiline",
    ],
    "comma-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": Array [
      "error",
      "last",
    ],
    "complexity": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "error",
      "never",
      Object {
        "enforceForClassMembers": true,
      },
    ],
    "consistent-return": Array [
      "error",
      Object {
        "treatUndefinedAsUnspecified": false,
      },
    ],
    "consistent-this": Array [
      "error",
      "self",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
    ],
    "default-case-last": Array [
      "error",
    ],
    "default-param-last": Array [
      "off",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "off",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "error",
      "always",
    ],
    "eqeqeq": Array [
      "error",
      "always",
      Object {
        "null": "ignore",
      },
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
      "never",
    ],
    "func-name-matching": Array [
      "error",
      "always",
      Object {
        "considerPropertyDescriptor": true,
        "includeCommonJSModuleExports": true,
      },
    ],
    "func-names": Array [
      "error",
      "never",
      Object {
        "generators": "never",
      },
    ],
    "func-style": Array [
      "error",
      "expression",
      Object {
        "allowArrowFunctions": true,
      },
    ],
    "function-call-argument-newline": Array [
      "error",
      "consistent",
    ],
    "function-paren-newline": Array [
      "error",
      "consistent",
    ],
    "generator-star-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": false,
      },
    ],
    "grouped-accessor-pairs": Array [
      "error",
      "getBeforeSet",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "id-denylist": Array [
      "off",
    ],
    "id-length": Array [
      "off",
    ],
    "id-match": Array [
      "off",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "indent": Array [
      "off",
      2,
    ],
    "init-declarations": Array [
      "off",
    ],
    "jsx-quotes": Array [
      "error",
      "prefer-double",
    ],
    "key-spacing": Array [
      "error",
      Object {
        "afterColon": true,
        "beforeColon": false,
        "mode": "strict",
      },
    ],
    "keyword-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "line-comment-position": Array [
      "off",
    ],
    "linebreak-style": Array [
      "error",
      "unix",
    ],
    "lines-around-comment": Array [
      "error",
      Object {
        "afterBlockComment": false,
        "afterLineComment": false,
        "allowArrayEnd": false,
        "allowArrayStart": true,
        "allowBlockEnd": false,
        "allowBlockStart": true,
        "allowClassEnd": false,
        "allowClassStart": true,
        "allowObjectEnd": false,
        "allowObjectStart": true,
        "beforeBlockComment": true,
        "beforeLineComment": true,
      },
    ],
    "lines-between-class-members": Array [
      "off",
      "always",
      Object {
        "exceptAfterSingleLine": false,
      },
    ],
    "max-classes-per-file": Array [
      "off",
    ],
    "max-depth": Array [
      "error",
      4,
    ],
    "max-len": Array [
      "error",
      Object {
        "code": 120,
        "ignoreComments": false,
        "ignoreRegExpLiterals": false,
        "ignoreStrings": false,
        "ignoreTemplateLiterals": false,
        "ignoreTrailingComments": false,
        "ignoreUrls": false,
        "tabWidth": 2,
      },
    ],
    "max-lines": Array [
      "error",
      Object {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-lines-per-function": Array [
      "off",
    ],
    "max-nested-callbacks": Array [
      "error",
      Object {
        "max": 3,
      },
    ],
    "max-params": Array [
      "error",
      Object {
        "max": 4,
      },
    ],
    "max-statements": Array [
      "off",
    ],
    "max-statements-per-line": Array [
      "error",
      Object {
        "max": 2,
      },
    ],
    "multiline-comment-style": Array [
      "error",
      "starred-block",
    ],
    "multiline-ternary": Array [
      "error",
      "always-multiline",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": true,
        "newIsCap": true,
        "properties": true,
      },
    ],
    "new-parens": Array [
      "error",
    ],
    "newline-per-chained-call": Array [
      "error",
      Object {
        "ignoreChainWithDepth": 4,
      },
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "off",
    ],
    "no-bitwise": Array [
      "off",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      "error",
      Object {
        "allowParens": true,
      },
    ],
    "no-console": Array [
      "error",
      Object {},
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "error",
      Object {
        "checkLoops": false,
      },
    ],
    "no-continue": Array [
      "off",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "off",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
      Object {
        "includeExports": false,
      },
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
      Object {
        "allowEmptyCatch": true,
      },
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "functions",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "off",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
      "all",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "off",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
      Object {
        "exceptions": Array [],
      },
    ],
    "no-implicit-coercion": Array [
      "error",
      Object {
        "allow": Array [
          "!!",
        ],
        "boolean": true,
        "number": true,
        "string": true,
      },
    ],
    "no-implicit-globals": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inline-comments": Array [
      "off",
    ],
    "no-inner-declarations": Array [
      "error",
      "functions",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-invalid-this": Array [
      "off",
      Object {
        "capIsConstructor": true,
      },
    ],
    "no-irregular-whitespace": Array [
      "error",
      Object {
        "skipComments": false,
        "skipRegExps": false,
        "skipStrings": false,
        "skipTemplates": false,
      },
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "off",
    ],
    "no-magic-numbers": Array [
      "off",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
      },
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      "error",
      Object {
        "allowSamePrecedence": true,
      },
    ],
    "no-mixed-spaces-and-tabs": Array [
      "error",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "error",
      Object {
        "ignoreEOLComments": false,
      },
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "error",
    ],
    "no-negated-condition": Array [
      "error",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": true,
      },
    ],
    "no-plusplus": Array [
      "off",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "error",
      Object {
        "builtinGlobals": true,
      },
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-restricted-exports": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "off",
    ],
    "no-restricted-imports": Array [
      "off",
    ],
    "no-restricted-properties": Array [
      "off",
    ],
    "no-restricted-syntax": Array [
      "off",
    ],
    "no-return-assign": Array [
      "error",
      "always",
    ],
    "no-return-await": Array [
      "off",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "off",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      "error",
      Object {
        "allowIndentationTabs": false,
      },
    ],
    "no-template-curly-in-string": Array [
      "off",
    ],
    "no-ternary": Array [
      "off",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "error",
      Object {
        "ignoreComments": false,
        "skipBlankLines": false,
      },
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "off",
    ],
    "no-unexpected-multiline": Array [
      "error",
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unneeded-ternary": Array [
      "error",
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unreachable-loop": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
      Object {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
      },
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": false,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "off",
      Object {
        "classes": true,
        "functions": false,
        "variables": true,
      },
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "off",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-warning-comments": Array [
      "error",
      Object {
        "location": "start",
        "terms": Array [
          "todo",
          "fixme",
          "xxx",
        ],
      },
    ],
    "no-whitespace-before-property": Array [
      "error",
    ],
    "no-with": Array [
      "error",
    ],
    "node/callback-return": Array [
      "off",
    ],
    "node/exports-style": Array [
      "error",
      "module.exports",
      Object {
        "allowBatchAssign": false,
      },
    ],
    "node/file-extension-in-import": Array [
      "off",
    ],
    "node/global-require": Array [
      "off",
    ],
    "node/handle-callback-err": Array [
      "error",
      "err",
    ],
    "node/no-callback-literal": Array [
      "error",
    ],
    "node/no-deprecated-api": Array [
      "error",
    ],
    "node/no-exports-assign": Array [
      "error",
    ],
    "node/no-extraneous-import": Array [
      "error",
    ],
    "node/no-extraneous-require": Array [
      "error",
    ],
    "node/no-hide-core-modules": Array [
      "off",
    ],
    "node/no-missing-import": Array [
      "off",
    ],
    "node/no-missing-require": Array [
      "off",
    ],
    "node/no-mixed-requires": Array [
      "error",
      Object {
        "allowCall": false,
        "grouping": false,
      },
    ],
    "node/no-new-require": Array [
      "error",
    ],
    "node/no-path-concat": Array [
      "error",
    ],
    "node/no-process-env": Array [
      "off",
    ],
    "node/no-process-exit": Array [
      "error",
    ],
    "node/no-restricted-import": Array [
      "error",
    ],
    "node/no-restricted-require": Array [
      "error",
    ],
    "node/no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "node/no-unpublished-bin": Array [
      "error",
    ],
    "node/no-unpublished-import": Array [
      "error",
    ],
    "node/no-unpublished-require": Array [
      "error",
    ],
    "node/no-unsupported-features": Array [
      "off",
    ],
    "node/no-unsupported-features/es-builtins": Array [
      "error",
    ],
    "node/no-unsupported-features/es-syntax": Array [
      "error",
      Object {
        "ignores": Array [
          "modules",
        ],
      },
    ],
    "node/no-unsupported-features/node-builtins": Array [
      "error",
    ],
    "node/prefer-global/buffer": Array [
      "error",
      "always",
    ],
    "node/prefer-global/console": Array [
      "error",
      "always",
    ],
    "node/prefer-global/process": Array [
      "error",
      "always",
    ],
    "node/prefer-global/text-decoder": Array [
      "error",
      "never",
    ],
    "node/prefer-global/text-encoder": Array [
      "error",
      "never",
    ],
    "node/prefer-global/url": Array [
      "error",
      "never",
    ],
    "node/prefer-global/url-search-params": Array [
      "error",
      "never",
    ],
    "node/prefer-promises/dns": Array [
      "error",
    ],
    "node/prefer-promises/fs": Array [
      "error",
    ],
    "node/process-exit-as-throw": Array [
      "error",
    ],
    "node/shebang": Array [
      "error",
    ],
    "nonblock-statement-body-position": Array [
      "error",
      "beside",
    ],
    "object-curly-newline": Array [
      "error",
      Object {
        "consistent": true,
      },
    ],
    "object-curly-spacing": Array [
      "error",
      "always",
    ],
    "object-property-newline": Array [
      "error",
      Object {
        "allowAllPropertiesOnSameLine": true,
        "allowMultiplePropertiesPerLine": false,
      },
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidExplicitReturnArrows": false,
        "avoidQuotes": false,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "error",
      "always",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "error",
      "after",
      Object {
        "overrides": Object {
          ":": "before",
          "?": "before",
        },
      },
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
      Object {
        "blankLine": "always",
        "next": "block-like",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": "block-like",
      },
    ],
    "prefer-arrow-callback": Array [
      "error",
      Object {
        "allowNamedFunctions": true,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false,
      },
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "AssignmentExpression": Object {
          "array": true,
          "object": true,
        },
        "VariableDeclarator": Object {
          "array": false,
          "object": true,
        },
      },
      Object {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": Array [
      "error",
    ],
    "prefer-named-capture-group": Array [
      "off",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-object-spread": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
      Object {
        "disallowRedundantWrapping": true,
      },
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "quote-props": Array [
      "error",
      "consistent-as-needed",
    ],
    "quotes": Array [
      "off",
      "single",
      Object {
        "allowTemplateLiterals": false,
        "avoidEscape": false,
      },
    ],
    "radix": Array [
      "error",
      "always",
    ],
    "require-atomic-updates": Array [
      "off",
    ],
    "require-await": Array [
      "off",
    ],
    "require-unicode-regexp": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
      "never",
    ],
    "security/detect-buffer-noassert": Array [
      "error",
    ],
    "security/detect-child-process": Array [
      "error",
    ],
    "security/detect-disable-mustache-escape": Array [
      "error",
    ],
    "security/detect-eval-with-expression": Array [
      "error",
    ],
    "security/detect-new-buffer": Array [
      "error",
    ],
    "security/detect-no-csrf-before-method-override": Array [
      "error",
    ],
    "security/detect-non-literal-fs-filename": Array [
      "error",
    ],
    "security/detect-non-literal-regexp": Array [
      "error",
    ],
    "security/detect-non-literal-require": Array [
      "error",
    ],
    "security/detect-object-injection": Array [
      "off",
    ],
    "security/detect-possible-timing-attacks": Array [
      "error",
    ],
    "security/detect-pseudoRandomBytes": Array [
      "error",
    ],
    "security/detect-unsafe-regex": Array [
      "error",
    ],
    "semi": Array [
      "off",
      "never",
      Object {
        "beforeStatementContinuationChars": "always",
      },
    ],
    "semi-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": Array [
      "error",
      "last",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": Array [
          "none",
          "all",
          "multiple",
          "single",
        ],
      },
    ],
    "sort-keys": Array [
      "off",
    ],
    "sort-vars": Array [
      "error",
      Object {
        "ignoreCase": false,
      },
    ],
    "space-before-blocks": Array [
      "error",
      "always",
    ],
    "space-before-function-paren": Array [
      "off",
      Object {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": Array [
      "error",
      "never",
    ],
    "space-infix-ops": Array [
      "error",
      Object {
        "int32Hint": false,
      },
    ],
    "space-unary-ops": Array [
      "error",
      Object {
        "nonwords": false,
        "words": true,
      },
    ],
    "spaced-comment": Array [
      "error",
      "always",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
      "never",
    ],
    "template-tag-spacing": Array [
      "error",
      "never",
    ],
    "unicode-bom": Array [
      "error",
      "never",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "error",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
      "inside",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
      "after",
    ],
    "yoda": Array [
      "error",
      "never",
    ],
  },
  "settings": Object {},
}
`;
